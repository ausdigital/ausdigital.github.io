swagger: '2.0'
info:
  version: '1.0'
  title: Transaction Access Point Gateway (TAP-GW) interface specification.
  description: >-
    TAP-GW is an extension for TAP specification. Check TAP API for information
    on how to post TAP messages. Dates: ISO8601 with timezone  Format:
    jsonapi.org.
schemes:
  - https
basePath: /api/v1/
produces:
  - application/json
securityDefinitions:
  JWTToken:
    type: apiKey
    name: Authorization
    description: >-
      JWT value prepended by `JWT`, for example: `JWT X.Y.X`. You can get your
      JWT for testpoint.io services at https://idp.testpoint.io/. Theoretically,
      implementaion may support different authentication methods.
    in: header
parameters:
  endpointId:
    name: endpointId
    in: path
    description: The Unique Endpoint Identifier.
    required: true
    type: string
  messageId:
    name: messageId
    in: path
    description: The Unique Message Identifier.
    required: true
    type: string
  endpointIdQuery:
    name: endpointId
    in: query
    description: The Unique Endpoint Identifier.
    required: false
    type: string
  statusQuery:
    name: status
    in: query
    description: The TAP Message received status.
    required: false
    type: string
    default: new
    enum:
      - new
      - read
  participantIdQuery:
    name: participantId
    in: query
    description: The string representation of Participant Identifier.
    required: false
    type: string
  message:
    name: message
    in: formData
    description: The message file.
    required: true
    type: file
  signature:
    name: signature
    in: formData
    description: The signature file.
    required: true
    type: file
  contentTypeHeader:
    name: Content-Type
    in: header
    description: content type header
    required: true
    type: string
    default: application/json
    enum:
      - application/json
  contentTypeMPHeader:
    name: Content-Type
    in: header
    description: content type multipart/form-data header
    required: true
    type: string
    default: multipart/form-data
    enum:
      - multipart/form-data
responses:
  '400':
    description: >-
      The server cannot or will not process the request due to something that is
      perceived to be a client error.
    schema:
      $ref: '#/definitions/errors'
    examples:
      application/json: |-
        {
          "errors": [{
              "code": "TAP-GW-0001",
              "name": "Malformed JSON.",
              "userMessage": "Could not decode the request body. The JSON was incorrect or not encoded as UTF-8."
            }
          ]
        }
  '401':
    description: >-
      Correct authentication credentials were not provided: Invalid
      Authorization header, JWT Signature verification failed, No auth header
    schema:
      $ref: '#/definitions/errors'
    examples:
      application/json: |-
        {
          "errors": [{
              "code": "TAP-GW-0004",
              "name": "Authentication Required.",
              "userMessage": "Please provide a valid JWT from correct issuer"
            }
          ]
        }
        |-
        {
          "errors": [{
              "code": "TAP-GW-0005",
              "name": "Authentication Required.",
              "userMessage": "Please provide a valid JWT: Signature has expired"
            }
          ]
        }
  '404':
    description: >-
      The origin server did not find a current representation of the target
      resource or is not willing to disclose that one exists.
    schema:
      $ref: '#/definitions/errors'
  '415':
    description: >-
      Unsupported media type (for example, used tried to send XML when endpoint
      accepts only JSON)
    schema:
      $ref: '#/definitions/errors'
    examples:
      application/json: |-
        {
          "errors": [{
              "code": "TAP-GW-0006",
              "name": "Unsupported media type.",
              "userMessage": "Unsupported media type. Must be multipart/form-data."
            }
          ]
        }
  '500':
    description: >-
      Internal server error, no extra actions from user required. No changes on
      the server have been made. User should retry request later or contact
      support.
    schema:
      $ref: '#/definitions/errors'
  400-nofile:
    description: >-
      The server cannot or will not process the request due to something that is
      perceived to be a client error.
    schema:
      $ref: '#/definitions/errors'
    examples:
      application/json: |-
        {
          "errors": [{
              "code": "TAP-GW-0002",
              "name": "No file was submitted.",
              "userMessage": "No file was for message parameter."
            },
            {
              "code": "TAP-GW-0003",
              "name": "No file was submitted.",
              "userMessage": "No file was for signature parameter."
            }
          ]
        }
paths:
  /endpoints/:
    get:
      tags:
        - Endpoints
      summary: Get Endpoints List
      description: >-
        Only endpoints for the given user will be returned. Filtering by
        metadata is supported (pass metadata and values to filter by as GET
        parameters)
      operationId: getEndpoints
      security:
        - JWTToken: []
      responses:
        '200':
          description: OK.
          headers:
            Content-Type:
              type: string
              description: Mandatory. Value - application/json.
            Date:
              type: string
              description: Mandatory. The date and time that the message was originated.
          schema:
            $ref: '#/definitions/endpointsResponseEntity'
          examples:
            application/json: |-
              {
                "links":{
                    "first": "https://tap-gw.testpoint.io/api/endpoints/?page=1",
                    "last": "https://tap-gw.testpoint.io/api/endpoints/?page=1",
                    "next": null,
                    "prev": null
                },
                "data": [
                    {
                        "type": "TapGwEndpoint",
                        "id": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXXX",
                        "attributes":{
                            "participantId": "urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151::9999999999",
                            "endpointType": "ausdigital-tap/2",
                            "key1": "value1",
                            "key2": "value2"
                        }
                    }
                ],
                "meta":{
                    "pagination":{
                        "page": 1,
                        "pages": 1,
                        "count": 1
                    }
                }
              }
        '401':
          $ref: '#/responses/401'
        '500':
          $ref: '#/responses/500'
    post:
      tags:
        - Endpoints
      summary: Create Endpoint
      description: >-
        Create Endpoint. JSON with desired endpoint fields is expected in a
        request body.
      operationId: postEndpoints
      parameters:
        - $ref: '#/parameters/contentTypeHeader'
        - description: The Endpoint details as a body parameter.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/endpointPostRequestEntity'
      security:
        - JWTToken: []
      responses:
        '201':
          description: >-
            The request has been fulfilled and has resulted in a resource
            created.
          headers:
            Content-Type:
              type: string
              description: Mandatory. Value - application/json.
            Date:
              type: string
              description: Mandatory. The date and time that the message was originated.
          schema:
            $ref: '#/definitions/endpointPostResponseEntity'
          examples:
            application/json: |-
              {
                "data":{
                    "type": "TapGwEndpoint",
                    "id": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXX",
                    "attributes":{
                        "participantId": "urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151::9999999999",
                        "endpointType": "ausdigital-tap/2",
                        "keyX": "valueY"
                    }
                }
              }
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '500':
          $ref: '#/responses/500'
  '/endpoints/{endpointId}':
    get:
      tags:
        - Endpoint Details
      summary: Get Endpoint Details
      description: >-
        Only endpoints for the given user will be returned (user determined by
        auth header)
      operationId: getEndpointDetails
      parameters:
        - $ref: '#/parameters/endpointId'
      security:
        - JWTToken: []
      responses:
        '200':
          description: OK.
          headers:
            Content-Type:
              type: string
              description: Mandatory. Value - application/json.
            Date:
              type: string
              description: Mandatory. The date and time that the message was originated.
          schema:
            $ref: '#/definitions/endpointPostResponseEntity'
          examples:
            application/json: |-
              {
                "data":{
                    "type": "TapGwEndpoint",
                    "id": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXX",
                    "attributes":{
                        "participantId": "urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151::9999999999",
                        "endpointType": "ausdigital-tap/2",
                        "keyX": "valueY"
                    }
                }
              }
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
    put:
      tags:
        - Endpoint Details
      summary: Endpoint Update
      description: >-
        Completely replaces the whole metadata set. Only endpoints for the given
        user could be updated. To delete metadata item send PUT without key
        which shall be deleted. New version of the object is returned, with
        metadata updated.
      operationId: putEndpointDetails
      parameters:
        - $ref: '#/parameters/contentTypeHeader'
        - $ref: '#/parameters/endpointId'
        - description: The TAP Endpoint metadata body parameter.
          in: body
          name: body
          required: true
          schema:
            type: object
            example:
              keyX: ValueX
      security:
        - JWTToken: []
      responses:
        '200':
          description: OK.
          headers:
            Content-Type:
              type: string
              description: Mandatory. Value - application/json.
            Date:
              type: string
              description: Mandatory. The date and time that the message was originated.
          examples:
            application/json: |-
              {
                "data":{
                    "type": "TapGwEndpoint",
                    "id": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXX",
                    "attributes":{
                        "participantId": "urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151::9999999999",
                        "endpointType": "ausdigital-tap/2",
                        "keyX": "valueX"
                    }
                }
              }
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
    patch:
      tags:
        - Endpoint Details
      summary: Endpoint Update
      description: >-
        Update only passed set of keys/values. Only endpoints for the given user
        could be updated. New version of the object is returned, with metadata
        updated.
      operationId: patchEndpointDetails
      parameters:
        - $ref: '#/parameters/contentTypeHeader'
        - $ref: '#/parameters/endpointId'
        - description: The TAP Endpoint metadata body parameter.
          in: body
          name: body
          required: true
          schema:
            type: object
            example:
              keyX: ValueX
      security:
        - JWTToken: []
      responses:
        '200':
          description: OK.
          headers:
            Content-Type:
              type: string
              description: Mandatory. Value - application/json.
            Date:
              type: string
              description: Mandatory. The date and time that the message was originated.
          examples:
            application/json: |-
              {
                "data":{
                    "type": "TapGwEndpoint",
                    "id": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXX",
                    "attributes":{
                        "participantId": "urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151::9999999999",
                        "endpointType": "ausdigital-tap/2",
                        "keyX": "valueX"
                    }
                }
              }
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
  /messages/:
    get:
      tags:
        - TAP messages
      summary: Get TAP messages
      description: >-
        Get TAP messages. Only messages from endpoints created by this user will
        be returned. Filtering by metadata and parameters is supported (pass
        metadata and values to filter by as GET parameters). Following
        parameters are available for filtering: status, endpoint, participantId.
        Any other query parameter is filtered as exact metadata of endpoint
        (returns only messages from endpoints which have metadata with given key
        equal to given value).
      operationId: getmessages
      parameters:
        - $ref: '#/parameters/statusQuery'
        - $ref: '#/parameters/endpointIdQuery'
        - $ref: '#/parameters/participantIdQuery'
      security:
        - JWTToken: []
      responses:
        '200':
          description: OK.
          headers:
            Content-Type:
              type: string
              description: Mandatory. Value - application/json.
            Date:
              type: string
              description: Mandatory. The date and time that the message was originated.
          schema:
            $ref: '#/definitions/messages'
          examples:
            application/json: |-
              {
                "links":{
                    "first": "https://tap-gw.testpoint.io/api/v1/messages/?page=1",
                    "last": "https://tap-gw.testpoint.io/api/v1/messages/?page=1",
                    "next": null,
                    "prev": null
                },
                "data": [
                    {
                        "type": "TapMessage",
                        "id": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXX",
                        "attributes":{
                            "uuid": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXX",
                            "deliveryStatus": "sent",
                            "createdAt": "2017-02-27T05:52:27.618962Z",
                            "sentAt": "2017-02-27T05:52:46.081878Z",
                            "docId": "QmXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                            "status": "new",
                            "metadata":{
                                "key1": "value2",
                                "key2": "value2"
                            },
                            "endpointId": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXX"
                        }
                    }
                ],
                "meta":{
                    "pagination":{
                        "page": 1,
                        "pages": 1,
                        "count": 1
                    }
                }
              }
        '401':
          $ref: '#/responses/401'
        '500':
          $ref: '#/responses/500'
  '/messages/{messageId}/metadata/':
    get:
      tags:
        - Get TAP message metadata
      summary: Get TAP message metadata.
      description: >-
        Only messages for the given user could be updated. Only `status`
        parameter of message could be updated.
      operationId: getMessageMetadata
      parameters:
        - $ref: '#/parameters/contentTypeHeader'
        - $ref: '#/parameters/messageId'
      security:
        - JWTToken: []
      responses:
        '200':
          description: OK.
          headers:
            Content-Type:
              type: string
              description: Mandatory. Value - application/json.
            Date:
              type: string
              description: Mandatory. The date and time that the message was originated.
          schema:
            $ref: '#/definitions/messages'
          examples:
            application/json: |-
              {
                "links":{
                    "first": "https://tap-gw.testpoint.io/api/v1/messages/?page=1",
                    "last": "https://tap-gw.testpoint.io/api/v1/messages/?page=1",
                    "next": null,
                    "prev": null
                },
                "data": [
                    {
                        "type": "TapMessage",
                        "id": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXX",
                        "attributes":{
                            "uuid": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXX",
                            "status": "sent",
                            "createdAt": "2017-02-27T05:52:27.618962Z",
                            "sentAt": "2017-02-27T05:52:46.081878Z",
                            "docId": "QmXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                            "status": "read",
                            "metadata":{
                                "key1": "value2",
                                "key2": "value2"
                            },
                            "endpointId": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXX"
                        }
                    }
                ],
                "meta":{
                    "pagination":{
                        "page": 1,
                        "pages": 1,
                        "count": 1
                    }
                }
              }
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
    patch:
      tags:
        - Update TAP message metadata
      summary: Update TAP message metadata.
      description: >-
        Only messages for the given user could be updated. Only `status`
        parameter of message could be updated.
      operationId: patchmessage
      parameters:
        - $ref: '#/parameters/contentTypeHeader'
        - $ref: '#/parameters/messageId'
        - description: The TAP message metadata body parameter.
          in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              status:
                type: string
      security:
        - JWTToken: []
      responses:
        '200':
          description: OK.
          headers:
            Content-Type:
              type: string
              description: Mandatory. Value - application/json.
            Date:
              type: string
              description: Mandatory. The date and time that the message was originated.
          schema:
            $ref: '#/definitions/messages'
          examples:
            application/json: |-
              {
                "links":{
                    "first": "https://tap-gw.testpoint.io/api/v1/messages/?page=1",
                    "last": "https://tap-gw.testpoint.io/api/v1/messages/?page=1",
                    "next": null,
                    "prev": null
                },
                "data": [
                    {
                        "type": "TapMessage",
                        "id": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXX",
                        "attributes":{
                            "uuid": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXX",
                            "status": "sent",
                            "createdAt": "2017-02-27T05:52:27.618962Z",
                            "sentAt": "2017-02-27T05:52:46.081878Z",
                            "docId": "QmXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                            "status": "read",
                            "metadata":{
                                "key1": "value2",
                                "key2": "value2"
                            },
                            "endpointId": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXX"
                        }
                    }
                ],
                "meta":{
                    "pagination":{
                        "page": 1,
                        "pages": 1,
                        "count": 1
                    }
                }
              }
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
  '/messages/{messageId}/body':
    get:
      tags:
        - Get TAP message body
      summary: Get TAP message body
      description: >-
        Returns TAP message body (JSON file with fields like "cyphertext" and so
        on, see `ausdigital-tap`)
      operationId: getmessageBody
      parameters:
        - $ref: '#/parameters/messageId'
      security:
        - JWTToken: []
      responses:
        '200':
          description: OK.
          headers:
            Content-Type:
              type: string
              description: Mandatory. Value - application/json.
            Date:
              type: string
              description: Mandatory. The date and time that the message was originated.
          schema:
            $ref: '#/definitions/messageBody'
          examples:
            application/json: |-
              {
                "cyphertext": "-----BEGIN PGP MESSAGE-----\nVersion: GnuPG v2\n\nhQEMA40g45xxxxxxxxxxxxxxxxxxxxx-----END PGP MESSAGE-----",
                "hash": "8d4d3f10e70960710fb95ec53719d306a6b1a779057a887ede073eaf48f81db8",
                "sender": "urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151::11112288600",
                "reference": ""
              }
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
definitions:
  endpointsResponseEntity:
    description: The TAP Endpoints collection model.
    properties:
      links:
        $ref: '#/definitions/links'
      data:
        type: array
        description: The TAP Endpoints collection data model.
        items:
          $ref: '#/definitions/endpointEntity'
      meta:
        $ref: '#/definitions/meta'
  endpointPostRequestEntity:
    description: The Create TAP Endpoint Request model.
    properties:
      participantId:
        $ref: '#/definitions/participantId'
    required:
      - participantId
    example:
      participantId: 'urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151::9999999999'
      key1: value1
      keyN: valueN
  endpointPostResponseEntity:
    description: The Create TAP Endpoint Response model.
    properties:
      data:
        $ref: '#/definitions/endpointEntity'
    required:
      - data
  endpointEntity:
    description: The TAP Endpoint model.
    properties:
      type:
        type: string
        description: The Endpoint Type.
      id:
        type: string
        description: The Endpoint Identifier.
      attributes:
        $ref: '#/definitions/attributes'
  attributes:
    description: The TAP Endpoint attributes model.
    properties:
      participantId:
        $ref: '#/definitions/participantId'
      endpointType:
        type: string
        description: The Endpoint Type.
    required:
      - participantId
      - endpointType
  participantId:
    type: string
    description: The Participant Identifier.
  links:
    type: object
    description: The TAP message collection links model.
    properties:
      first:
        type: string
      last:
        type: string
      next:
        type: string
      prev:
        type: string
    required:
      - first
      - last
      - next
      - prev
  meta:
    type: object
    description: The TAP message collection meta model.
    properties:
      pagination:
        type: object
        description: The TAP message collection meta pagination model.
        properties:
          page:
            type: integer
            description: The current page number.
          pages:
            type: integer
            description: The number of total pages.
          count:
            type: integer
            description: The number of messages in the collection.
  messageBody:
    description: The TAP message model.
    properties:
      cyphertext:
        type: string
        description: The TAP message cyphertext.
      hash:
        type: string
        description: The TAP message hash.
      sender:
        type: string
        description: The TAP message sender.
      reference:
        type: string
        description: The TAP message reference.
  messageData:
    description: The TAP Message data model.
    properties:
      data:
        $ref: '#/definitions/message'
  message:
    description: The TAP Message model.
    properties:
      type:
        type: string
        description: The Message Type.
      id:
        type: string
        description: The Message Identifier.
      attributes:
        type: object
        description: The TAP Message attributes.
        properties:
          uuid:
            type: string
            description: 'The unique identifier, generated by the receiving gateway.'
          status:
            $ref: '#/definitions/status'
          deliveryStatus:
            $ref: '#/definitions/deliveryStatus'
          createdAt:
            type: string
            format: date-time
            description: The date when the message was created.
          sentAt:
            type: string
            format: date-time
            description: The date when the message was sent.
          docId:
            type: string
            description: The TAP message document identifier.
          metadata:
            type: object
            description: The TAP message metadata.
  messages:
    description: The collection of TAP messages.
    properties:
      links:
        $ref: '#/definitions/links'
      data:
        type: array
        description: The data attribute to hold a collection of TAP messages.
        items:
          $ref: '#/definitions/message'
      meta:
        $ref: '#/definitions/meta'
  status:
    type: string
    description: The TAP Message status.
    enum:
      - new
      - read
  deliveryStatus:
    type: string
    description: The TAP Message delivery status.
    enum:
      - processing
      - transit
      - sent
      - error
  errors:
    type: object
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/error'
  error:
    description: The standard error response srtucture.
    properties:
      code:
        type: string
        description: The code associated with the error.
      name:
        type: string
        description: The name category for the error.
      userMessage:
        type: string
        description: The human readable error message.
