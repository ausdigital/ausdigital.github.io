swagger: '2.0'
info:
  version: '1.0'
  title: Digital Capability Publisher (DCP) interface specification
  description: >
    The "Digital Capability Publisher" (DCP) provides the ability to discover
    detailed service information and associated digital certificates for any
    known business identifier. 


    Please mind the test installation and ensure data validity - some of such
    installations have data like in production, with real businesses, but this
    data is not guaranteed to be valid and may be changed in development
    purposes; do not rely on data from specific hostname to real-world
    production installation until service owners specifically said it's true and
    valid. For example, any *.testpoint.io installations have the test data and
    can't be used in production.


    This API specification should be valid for all supporting installations and
    implementations.


    If you want OASIS XML output:

    * pass Accept header with 'application/xml' or 'text/xml' value

    * pass ?format=xml as GET query parameter


    OASIS-compliant urls also supported (but it is strongy recommended to
    implement json, just because JSON is more flexible and contains more
    information). Examples:


    *
    https://dcp.testpoint.io/urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151::22341388307?format=xml

    *
    https://dcp.testpoint.io/urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151::22341388307/service/dbc::invoice?format=xml
      
    Despite Oasis SMP standard prohibit using SSL/TLS, DPC implementation
    speicfication defines HTTPS as a signle supported protocol.  

    Please note that JSON format differs from specification XML and has more
    data in it.


    If you want to do any authenticated test requests then it's better to use
    CURL, not Swaggerhub website.
schemes:
  - https
basePath: /
securityDefinitions:
  JWT:
    type: apiKey
    description: >
      JWT token value prepended by `JWT`, for example: 

      `JWT XXXXX.YYYYYYYYYYYYYYYYYYYYYYY.ZZZZZZ`

      You can get your JWT for testpoint.io services at
      https://idp.testpoint.io/
    in: header
    name: Authorization
produces:
  - application/xml
  - text/html
  - text/xml
parameters:
  fingerprintParameter:
    name: fingerprint
    in: path
    description: value of fingerprint (should be not less than 40 characteres)
    required: true
    type: string
    default: ''
  participantIdUrlParameter:
    name: participant_id
    in: path
    description: >-
      The participant identifier. Comprises the identifier, and an identifier
      scheme. This identifier MUST have the same value of the {id} part of the
      URI of the enclosing ServiceMetadata resource.
    required: true
    type: string
    default: 'urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151::22341388307'
  linkedParticipantIdUrlParameter:
    name: linked_participant_id
    in: path
    description: >-
      The participant identifier. Comprises the identifier, and an identifier
      scheme. This identifier MUST have the same value of the {id} part of the
      URI of the enclosing ServiceMetadata resource.
    required: true
    type: string
    default: 'urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151::22341388307'
  documentIdUrlParameter:
    name: document_id
    in: path
    description: >-
      Represents the type of document that the recipient is able to receive. The
      document is represented by an identifier (identifying the document type)
      and an identifier scheme, which the format of the identifier itself.
    required: true
    type: string
    default: 'dbc::invoices'
  acceptHeader:
    name: Accept
    in: header
    description: accept header
    required: false
    type: string
    default: application/xml
    enum:
      - application/xml
      - text/html
      - text/xml
  contentTypeHeader:
    name: Content-Type
    in: header
    description: content type header
    required: true
    type: string
    default: application/xml
    enum:
      - application/xml
      - text/html
      - text/xml
  notRevokedBefore:
    name: notRevokedBefore
    in: query
    description: >-
      Filter parameter for keys never revoked or revoked lately than given time
      (in ISO 8601 format)
    required: false
    type: string
    format: date-time
    default: '2017-03-02T00:00:00.000000+00:00'
  published_before:
    name: published_before
    in: query
    description: Filter parameter for keys published before given time (in ISO 8601 format)
    required: false
    type: string
    format: date-time
    default: '2017-03-03T00:00:00.000000+00:00'
responses:
  '400':
    description: >-
      The server cannot or will not process the request due to something that is
      perceived to be a client error.
    schema:
      $ref: '#/definitions/error400'
  '401':
    description: Invalid auth header. No credentials provided.
    schema:
      $ref: '#/definitions/error401'
  '403':
    description: >-
      The server understood the request, but is refusing to fulfill it. Return
      this if there is a problem with the client certificate.
    schema:
      $ref: '#/definitions/error403'
  '404':
    description: >-
      The origin server did not find a current representation of the target
      resource or is not willing to disclose that one exists.
    schema:
      $ref: '#/definitions/errors'
  '406':
    description: >-
      The resource identified by the request is only capable of generating
      response entities which have content characteristics not acceptable
      according to the accept headers sent in the request.
    schema:
      $ref: '#/definitions/errors'
  '500':
    description: >-
      Internal server error; no action required; may help to retry request later
      or contact support.
    schema:
      $ref: '#/definitions/errors'
  403-key:
    description: >
      * Participant id {participant_id}} not available for given user - not
      business owner

      * Invalid auth header. No credentials provided.

      * Badly formed JWT

      * Invalid Authorization header. JWT Signature verification failed.
    schema:
      $ref: '#/definitions/errors'
  204-delete:
    description: The resource has been removed.
    headers:
      date:
        type: string
        description: The date and time that the message was originated.
paths:
  '/{participant_id}':
    get:
      tags:
        - service group
      summary: Service Group Info
      description: Get Service Group Info
      operationId: getServiceGroup
      parameters:
        - $ref: '#/parameters/participantIdUrlParameter'
        - $ref: '#/parameters/acceptHeader'
      responses:
        '200':
          description: Participant Information
          headers:
            Content-Type:
              type: string
          schema:
            $ref: '#/definitions/serviceGroup'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
  '/{participant_id}/service/{document_id}':
    get:
      tags:
        - service metadata
      summary: Service Metadata
      description: Get Signed Service Metadata
      operationId: getSignedServiceMetadata
      parameters:
        - $ref: '#/parameters/participantIdUrlParameter'
        - $ref: '#/parameters/documentIdUrlParameter'
        - $ref: '#/parameters/acceptHeader'
      responses:
        '200':
          description: Service Metadata Information
          headers:
            Content-Type:
              type: string
          schema:
            $ref: '#/definitions/serviceMetadata'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '500':
          description: Internal server error
    put:
      tags:
        - service metadata
      summary: Create/Update Service Metadata
      description: Create/Update Service Metadata
      operationId: createServiceMetadata
      parameters:
        - $ref: '#/parameters/participantIdUrlParameter'
        - $ref: '#/parameters/documentIdUrlParameter'
        - $ref: '#/parameters/contentTypeHeader'
        - description: Service metadata info
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/serviceMetadataPut'
      security:
        - JWT: []
      responses:
        '200':
          description: Service Metadata Information
          headers:
            Content-Type:
              type: string
          schema:
            $ref: '#/definitions/serviceMetadata'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '500':
          $ref: '#/responses/500'
    delete:
      tags:
        - service metadata
      summary: Delete Service Metadata Info
      description: Delete Service Metadata Info
      operationId: deleteServiceMetadata
      parameters:
        - $ref: '#/parameters/participantIdUrlParameter'
        - $ref: '#/parameters/documentIdUrlParameter'
      security:
        - JWT: []
      responses:
        '204':
          $ref: '#/responses/204-delete'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
definitions:
  serviceGroup:
    properties:
      serviceMetadataReferenceCollection:
        type: array
        items:
          type: string
      extension:
        type: object
      name:
        type: string
      participantIdentifier:
        $ref: '#/definitions/participantIdentifier'
    example:
      ServiceMetadataReferenceCollection:
        - 'bdx-docid-qns::urn:oasis:names:specification:ubl:schema:xsd:Invoice-2'
      Name: default
      Extension: {}
      ParticipantIdentifier:
        scheme: 'urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151'
        value: '99999999529'
  serviceMetadataPut:
    properties:
      documentIdentifier:
        $ref: '#/definitions/documentIdentifier'
      processList:
        type: array
        items:
          $ref: '#/definitions/process'
    example:
      ProcessList:
        - ProcessIdentifier:
            scheme: ausdigital.org
            value: bill-invoice-v1
          ServiceEndpointList:
            - ServiceActivationDate: '2017-04-13'
              Certificate: TlRMTVNTUAABAAAAt7IY4gk....
              EndpointURI: >-
                http://tap-gw.testpoint.io/api/endpoints/af892e86-9580-484f-ae7e-c4bd42c98eb7/message/
              transportProfile: tap-v2.ausdigital.org
              ServiceExpirationDate: '2017-04-17'
              RequireBusinessLevelSignature: false
              TechnicalInformationUrl: 'http://ausdigital.org/specs/ausdigital-bill/1.0/'
              MinimumAuthenticationLevel: '1'
              ServiceDescription: >-
                TAP-GW Service Endpoint for AusDigital BILL Tax Invoice
                documents.
        - ProcessIdentifier:
            scheme: ausdigital.org
            value: bill-adjustment-v1
          ServiceEndpointList:
            - ServiceActivationDate: '2017-04-13'
              Certificate: TlRMTVNTUAABAAAAt7IY4gk....
              EndpointURI: >-
                http://tap-gw.testpoint.io/api/endpoints/af892e86-9580-484f-ae7e-c4bd42c98eb7/message
              transportProfile: tap-v2.ausdigital.org
              ServiceExpirationDate: '2017-04-17'
              RequireBusinessLevelSignature: false
              TechnicalInformationUrl: 'http://ausdigital.org/specs/ausdigital-bill/1.0/'
              MinimumAuthenticationLevel: '2'
              ServiceDescription: >-
                TAP-GW Service Endpoint for AusDigital BILL Invoice Adjustment
                documents.
      DocumentIdentifier:
        scheme: bdx-docid-qns
        value: 'urn:oasis:names:specification:ubl:schema:xsd:Invoice-2'
      id: 'bdx-docid-qns::urn:oasis:names:specification:ubl:schema:xsd:Invoice-2'
      ParticipantIdentifier:
        scheme: 'urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151'
        value: '99999999529'
  serviceMetadata:
    required:
      - participantIdentifier
    properties:
      processList:
        type: array
        items:
          $ref: '#/definitions/process'
      documentIdentifier:
        $ref: '#/definitions/documentIdentifier'
      id:
        type: string
      participantIdentifier:
        type: array
        items:
          $ref: '#/definitions/participantIdentifier'
  process:
    properties:
      processIdentifier:
        $ref: '#/definitions/processIdentifier'
      serviceEndpointList:
        type: array
        items:
          $ref: '#/definitions/serviceEndpoint'
  serviceEndpoint:
    properties:
      endpointURI:
        type: string
      transportProfile:
        type: string
      requireBusinessLevelSignature:
        type: boolean
      minimumAuthenticationLevel:
        type: number
      certificate:
        type: string
      serviceDescription:
        type: string
      technicalInformationUrl:
        type: string
      serviceActivationDate:
        type: string
        format: date
      serviceExpirationDate:
        type: string
        format: date
  processIdentifier:
    properties:
      scheme:
        type: string
        description: The scheme of the identifier
      value:
        type: string
        description: The unique ID within the scheme
  documentIdentifier:
    properties:
      scheme:
        type: string
        description: The scheme of the identifier
      value:
        type: string
        description: The unique ID within the scheme
  participantIdentifier:
    properties:
      scheme:
        type: string
        description: The scheme of the identifier
      value:
        type: string
        description: The unique ID within the scheme
  errors:
    type: object
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/error'
  error:
    description: error response srtucture
    properties:
      code:
        type: string
        description: The code associated with the error.
      name:
        type: string
        description: The name category for the error.
      userMessage:
        type: string
        description: The human readable error message.
  error400:
    type: object
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/error'
    example:
      errors:
        - code: DCP_V400
          name: DocumentIdentifier
          userMessage: This field is required.
  error401:
    type: object
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/error'
    example:
      errors:
        - code: DCP-X401
          name: Authentication Failed
          userMessage: Invalid auth header. No credentials provided.
  error403:
    type: object
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/error'
    example:
      errors:
        - code: DCP-X403
          name: Permission Denied
          userMessage: >-
            Participant id
            urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151::99998888779 not
            available for given user - not business owner
